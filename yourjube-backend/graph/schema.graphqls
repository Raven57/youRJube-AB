# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar Time

type Category {
  categoryid: ID!
  categoryname: String!
  videos : [Video!]!
}

type Location {
  locationid :ID!
  locationname : String!
  videos : [Video!]!
  users: [User!]!
}

type Videotype {
  videotypeid: ID!
  videotype: String!
  videos : [Video!]!
}

type Privacy {
  privacyid: ID!
  privacyname: String!
}

type Premiumtype {
  premiumid :ID!
  premiumname : String!
}

type Restriction {
  restrictionid: ID!
  restrictioncategory: String!
  videos: [Video!]!
}

type Videocondition {
  videoconditionid: ID!
  videoconditionname: String!
  videos: [Video!]!
}

type Reactiontype {
  reactiontypeid: ID!
  reactiontypename: String!
    reactions : [Reaction!]!
}

type Reaction {
  userid: ID!
  postid: ID!
  commentid: ID!
  videoid: ID!
  reactiontypeid: ID!
  user: User!
  post: Post!
  comment: Comment!
  video: Video!
  reactiontype: Reactiontype!
}

type Post {
  postid: ID!
  postpicture: String!
  posttime: Time!
  postdetail: String!
  userid: ID!
  user: User!
  reactions: [Reaction!]!
}

type Premiumdetail {
  userid :ID!
  premiumid :ID!
  startdate : Time!
  enddate : Time!
  premiumtype: Premiumtype!
}

type Comment {
  commentid: ID!
  commentdetail: String!
  commenttime: Time!
  userid: ID!
  videoid: ID!
  rootcommentid: ID!
  user: User!
  video: Video!
  rootcomment: Comment!
  reactions : [Reaction!]!
}
type Video {
  videoid: ID!
  videotitle: String!
  videodescription: String!
  videosource: String!
  uploadtime: Time!
  publishtime: Time!
  thumbnailsource: String!
  viewcount: Float!
  userid: ID!
  typeid: ID!
  videoconditionid: ID!
  locationid: ID!
  restrictionid: ID!
  categoryid: ID!
  privacyid: ID!
  videotype: Videotype!
  videocondition: Videocondition!
  location: Location!
  restriction: Restriction!
  category: Category!
  privacy: Privacy!
  comments:[Comment!]!
  reactions : [Reaction!]!
    playlistdetails: [Playlistdetail!]!
}

type Playlistdetail {
  playlistid: ID!
  videoid: ID!
  viewcount: Float!
  videoorder: Int!
  video:Video!
}

type Playlist {
  playlistid: ID!
  playlisttitle: String!
  playlistdescription: String!
  createdtime: Time!
  updatedtime: Time!
  playlisturl: String!
  thumbnailsource: String!
  privacyid: ID!
  userid: ID!
  privacy: Privacy!
  playlistdetails : [Playlistdetail!]!
  user: User!
}

type Subscription {
  userid: ID!
  channelid: ID!
  notification: Boolean!
  user: User!
  channel: User!
}
type User {
  userid : ID!
  useremail: String!
  username: String!
  joindate: Time!
  channeldetail :String!
  channelurl : String!
  bgimgaddr: String!
  profileimgaddr: String!
  locationid:  ID!
  password: String!
  age : Int!
  restrictionid: ID!
  restriction: Restriction!
  location: Location!
  videos : [Video!]!
  premiumdetails: [Premiumdetail!]!
  playlists : [Playlist!]!
  posts : [Post!]!
  comments :[Comment!]!
  premiumdetail: Premiumdetail!
}

type AuthToken {
  accessToken: String!
  expiredAt: Time!
}

type AuthResponse {
  authToken: AuthToken!
  user: User!
}

input NewLocationInput {
  locationname: String!
}
input PremiumDetailInput {
  userid :ID!
  premiumid :ID!
  endInMonth : Int!
  endInYear: Int!
}

input RegisterUserInput {
  useremail: String!
  username: String!
  profileimgaddr: String!
  password: String!
  age: Int!
  locationid: String!
}

input LoginInput {
  useremail : String!
  password: String!
}
input UploadVideoInput{
  videotitle: String!
  videodescription: String!
  userid: ID!
  typeid: ID!
  locationid: ID!
  restrictionid: ID!
  categoryid: ID!
  privacyid: ID!
  publishAfterMinute:Int!
}
input FinishUplodVideoInput{
    videoname:String!
    userid:ID!
    videosource: String!
    thumbnailsource: String!
}
input UpdateUserInput {
  useremail: String
  username: String
  channeldetail :String
  channelurl : String
  bgimgaddr: String
  profileimgaddr: String
  locationid:  String
  password: String
  age : Int
  restrictionid: String
}
input VideoFilter {
  name: String
}
input RefreshTokenInput {
  token : String!
}

type Query {
  restrictions: [Restriction!]!
  privacies: [Privacy!]!
  categories: [Category!]!
  videotypes: [Videotype!]!
  premiumtypes: [Premiumtype!]!
  locations: [Location!]!
  users: [User!]!
  user(userid: ID!):User!
  location(name: String!):Location!
}

type Mutation {
  uploadVideo(input: UploadVideoInput!): Video!
  finishUpload(input:FinishUplodVideoInput!): Video!
  UserGoogleLogin(useremail: String!): AuthResponse!
  createLocation(input: NewLocationInput!): Location!
  createUser(input: RegisterUserInput!): AuthResponse!
  userLogin(input: LoginInput!): AuthResponse!
  refreshToken(input: RefreshTokenInput!): String!
  createPremiumDetail (input: PremiumDetailInput!): Premiumdetail!
}


