# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph
  package: graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/Raven57/yourjube-back-end/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Category:
    model: model.Category
    fields:
      videos:
        resolver: true
  Videotype:
    model: model.Videotype
    fields:
      videos:
        resolver: true
  Restriction:
    model: model.Restriction
    fields:
      videos:
        resolver: true
  Videocondition:
    model: model.Videocondition
    fields:
      videos:
        resolver: true
  Reactiontype:
    model: model.Reactiontype
    fields:
      reactions:
        resolver: true
  Reaction:
    model: model.Reaction
    fields:
      user:
        resolver: true
      post:
        resolver: true
      comment:
        resolver: true
      video:
        resolver: true
      reactiontype:
        resolver: true
  Post:
    model: model.Post
    fields:
      user:
        resolver: true
      reactions:
        resolver: true
  Comment:
    model: model.Comment
    fields:
      user:
        resolver: true
      video:
        resolver: true
      comment:
        resolver: true
      reactions:
        resolver: true
  Video:
    model: model.Video
    fields:
      videotype:
        resolver: true
      videocondition:
        resolver: true
      location:
        resolver: true
      restriction:
        resolver: true
      category:
        resolver: true
      privacy:
        resolver: true
      comments:
        resolver: true
      reactions:
        resolver: true
      playlistdetails:
        resolver: true
      user:
        resolver: true
  Playlistdetail:
    model: model.Playlistdetail
    fields:
        video:
          resolver: true
  Playlist:
    model: model.Playlist
    fields:
      privacy:
        resolver: true
      playlistdetails:
        resolver: true
      user:
        resolver: true
  User:
    model: model.User
    fields:
      restriction:
        resolver: true
      location:
        resolver: true
      videos:
        resolver: true
      premiumdetails:
        resolver: true
      playlists:
        resolver: true
      posts:
        resolver: true
      comments:
        resolver: true
  Premiumdetail:
    model: model.Premiumdetail
    fields:
      premiumtype:
        resolver: true
  Usersubscription:
    model: model.Usersubscription
    fields:
      user:
        resolver: true
      channel:
        resolver: true
  Location:
    model: model.Location
    fields:
      videos:
        resolver: true
      users:
        resolver: true

